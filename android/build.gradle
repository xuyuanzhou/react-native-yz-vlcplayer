apply plugin: 'com.android.library'


def _ext = rootProject.ext;

def _reactNativeVersion = _ext.has('reactNative') ? _ext.reactNative : '+';
def _compileSdkVersion = _ext.has('compileSdkVersion') ? _ext.compileSdkVersion : 28;
def _buildToolsVersion = _ext.has('buildToolsVersion') ? _ext.buildToolsVersion : '28.0.3';
def _minSdkVersion = _ext.has('minSdkVersion') ? _ext.minSdkVersion : 16;
def _targetSdkVersion = _ext.has('targetSdkVersion') ? _ext.targetSdkVersion : 28;
def _supportLibVersion = _ext.has('supportLibVersion') ? _ext.supportLibVersion: '28.0.0'

android {
    compileSdkVersion _compileSdkVersion
    buildToolsVersion _buildToolsVersion

    defaultConfig {
        minSdkVersion _minSdkVersion
        targetSdkVersion _targetSdkVersion
        versionCode 1
        versionName "1.0"
        ndk {
            //支持的abi    可选 精简的库
            abiFilters 'armeabi-v7a'//,'x86_64','arm64-v8a','x86'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    provided fileTree(dir: 'libs', include: ['*.jar'])
    provided "com.facebook.react:react-native:${_reactNativeVersion}"
    compile 'com.yyl.vlc:vlc-android-sdk:3.0.13'
    implementation "com.android.support:support-annotations:${_supportLibVersion}"
    implementation "com.android.support:support-compat:${_supportLibVersion}"
    implementation "com.android.support:support-core-utils:${_supportLibVersion}"
    implementation "com.android.support:support-core-ui:${_supportLibVersion}"
    implementation "com.android.support:support-fragment:${_supportLibVersion}"
    //compile 'de.mrmaffen:vlc-android-sdk:2.0.6'
}
